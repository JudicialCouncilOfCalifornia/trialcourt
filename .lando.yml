# Rename this file to .lando.yml to use, or delete if you already have one.
# Named start.lando.yml to not conflict with projects installed with lando mw install.

# project_code: cmm, apb_d7, etc.
name: tc

# drupal8 | drupal7 | wordpress
recipe: drupal8

config:
  # default: web | lightning: docroot
  webroot: web

  php: '8.1'

  database: mariadb

  composer_version: '2'

  # Optionally activate xdebug
  #
  # If you are having trouble getting xdebug to work please see:
  # https://docs.devwithlando.io/services/php.html#using-xdebug
  #xdebug: true

proxy:
  appserver:
    - "*.lndo.site"

# Additional services and features.
services:
  appserver:
    webroot: web
    # Uncomment below and lando rebuild to enable xdebug.
    # The old xon/xoff commands no longer work with recent lando versions.
    # xdebug: true
    config:
      php: xdebug.php.ini
  # Theme.
  node-cli:
    type: compose
    services:
      image: node:13.13.0
      # Required. See Below
      command: docker-php-entrypoint apache2-foreground
      volumes:
        - .:/app
  database:
    # Create databases for each multisite.
    run_as_root:
      - /bin/sh -c "/app/scripts/dbcreate.sh"

# Custom Lando commands
tooling:
  dbim:
    service: database
    cmd: /app/scripts/dbimport.sh
    description: "dbim <file> -d [slo|newsroom|...]\nThis is a helper script similar to 'lando db-import' but supports multisite with multiple databases in one container/service instead of requiring a service for every multisite.\n-h|--help\t\t\tShow this help message.\n-d|--database [database]\tThere is a database for every directory in the web/sites/ directory.\n--no-wipe\t\t\tDo not wipe the database before import."
  dbget:
    description: "dbget [drush-alias]\tDownload the database for alias. i.e. lando dbget @slo.live"
    service: appserver
    cmd: scripts/dbget.sh
  config-ignore:
    description: "Update the config ignore across all sites. Run after Feature (jcc_tc2_all_immutable_config) is updated."
    service: appserver
    cmd: scripts/sync_config_ignore.sh
  feature:docs:
    description: "Show documentation for managing features on this project. FEATURES.md"
    service: appserver
    cmd: clear && scripts/feature_sync.sh -c docs
  feature:enable:
    description: "lando feature:enable [module]\t\t\tEnable a new feature on all multisites."
    service: appserver
    cmd: scripts/feature_sync.sh -c enable
  feature:sync:
    description: "lando feature:sync [site code (oc)]\tSync latest feature updates to all multisites."
    service: appserver
    cmd: scripts/feature_sync.sh -c sync
  fresh:
    description: "Run all the things to get local to a fresh state for this branch. (Checkout master branch first if starting a new feature.)
      \n -h\tShow this help message.
      \n -f\t[path/to/sql] - Import a database file.
      \n -l\t[URI] for drush commands. Target specific multisites.
      \n  \tSee available appserver proxies in .lando.yml
      \n  \tOR urls in lando info --service=appserver."
    cmd:
      - appserver: rm -f /app/data/.*.fresh && true
      - appserver: scripts/fresh.sh
      - node-cli: scripts/fresh.sh
      - appserver: scripts/fresh.sh
  multisite:
    description: "lando multisite [new] - no other steps required"
    cmd:
      - database: scripts/dbcreate.sh -i
      - appserver: scripts/install.sh
  node:
    service: node-cli
  npm:
    service: node-cli
  phpcbf:
    service: appserver
    description: "lando phpcbf [path]\tCode Beautification. (Auto fix coding standards.)"
    cmd: /app/vendor/bin/phpcbf --config-set installed_paths /app/vendor/drupal/coder/coder_sniffer && /app/vendor/bin/phpcbf -p --standard=Drupal,DrupalPractice --extensions=php,inc,profile,module,install,profile
  phpcs:
    service: appserver
    description: "lando phpcs [path]\tCode Sniffer. (Check coding standards.)"
    cmd: /app/vendor/bin/phpcs --config-set installed_paths /app/vendor/drupal/coder/coder_sniffer && /app/vendor/bin/phpcs -p --standard=Drupal,DrupalPractice --extensions=php,inc,profile,module,install,profile
  phpmd:
    service: appserver
    description: "lando phpmd [path] [format] [ruleset]\tMess Detector."
    cmd: /app/vendor/bin/phpmd
  reset:
    service: appserver
    description: "lando reset -l [alias]\tRuns updb, cr, cim, uli \n Reset your local after a build or db install."
    cmd:
      - drush updb -y
      - drush cim -y
      - drush fra --bundle=jcc_tc2 -y
      - drush cr
  tb:
    service: node-cli
    description: "Theme: Build - `tb [theme_name]` Build poduction theme assets."
    cmd:
      - /app/scripts/theme.sh -b
  tb:all:
    service: node-cli
    description: "Theme: Build All - `tb:all` Build all themes in the themes/custom directory."
    cmd: /app/scripts/theme.sh -a
  th:
    service: appserver
    description: "Help information for theme management."
    cmd: /app/scripts/theme.sh -h
  ti:
    service: node-cli
    description: "Theme: Install - `ti [theme_name]` (npm install)"
    cmd:
      - /app/scripts/theme.sh -i
      - /app/scripts/theme.sh -b
  tw:
    service: node-cli
    description: "Theme: Watch `tw [theme_name]`"
    cmd:
      - /app/scripts/theme.sh -w
  ts:
    service: appserver
    description: "Theme: Sub - `ts [Theme Name]` Create subtheme from JCC Base"
    cmd:
      - drush --include=/app/web/themes/custom/jcc_base jcc_base:create

env_file:
  - .env
