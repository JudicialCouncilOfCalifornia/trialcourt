<?php

/**
 * @file
 * Contains jcc_roc module functionality.
 */

use Drupal\Core\Entity\EntityTypeInterface;

// Include all files from the inc directory.
$includes_path = dirname(__FILE__) . '/inc/*.inc';
foreach (glob($includes_path) as $filename) {
  require_once dirname(__FILE__) . '/inc/' . basename($filename);
}

/**
 * Implements hook_theme().
 */
function jcc_roc_theme($existing, $type, $theme, $path): array {
  return [
    'node__rule_document' => [
      'base hook' => 'node',
    ],
    'node__rule_document__teaser' => [
      'base hook' => 'node',
    ],
    'node__rule_subsection' => [
      'base hook' => 'node',
    ],
    'paragraph__rule_section__default' => [
      'base hook' => 'paragraph',
    ],
    'paragraph__rule_section__preview' => [
      'base hook' => 'paragraph',
    ],
    'paragraph__rule_section__full' => [
      'base hook' => 'paragraph',
    ],
    'field__node__field_rule_section_attachment__rule_document' => [
      'base hook' => 'field',
    ],
  ];
}

/**
 * Implements hook_entity_extra_field_info().
 */
function jcc_roc_entity_extra_field_info(): array {
  $extra = [];

  $extra['node']['rule_document']['display']['in_page_nav'] = [
    'label' => t('Rule Document: Navigation'),
    'description' => t('Field for rendering the in-page navigation links on a rule document.'),
    'weight' => -99,
    'visible' => FALSE,
  ];

  $extra['node']['rule_subsection']['display']['in_page_nav'] = [
    'label' => t('Rule Document: Navigation'),
    'description' => t('Field for rendering the in-page navigation links on a rule subsection.'),
    'weight' => -99,
    'visible' => FALSE,
  ];

  return $extra;
}

/**
 * Returns true if the current route is an add/edit route.
 *
 * @return bool
 *   Returns true for edit routes.
 */
function jcc_roc_is_edit_route(): bool {
  $is_edit_route = drupal_static(__FUNCTION__);
  if ($is_edit_route !== NULL) {
    return $is_edit_route;
  }

  $route_match = Drupal::routeMatch();
  $route_name = $route_match->getRouteName();
  $is_edit_route = FALSE;

  $routes = [
    'entity.node.edit_form',
    'node.add',
    'layout_paragraphs.builder.formatter',
    'layout_paragraphs.builder.edit_item',
    'layout_paragraphs.builder.insert',
    'layout_paragraphs.builder.choose_component',
  ];

  // Check if an edit route.
  if (in_array($route_name, $routes)) {
    $is_edit_route = TRUE;
  }

  // Check the theme the current route renders in.
  $current_rendered_theme = Drupal::service('theme.negotiator')->determineActiveTheme($route_match);
  $admin_theme = Drupal::config('system.theme')->get('admin');
  $admin_theme_name = Drupal::service('theme_handler')->getName($admin_theme);
  if ($current_rendered_theme == $admin_theme_name) {
    $is_edit_route = TRUE;
  }

  return $is_edit_route;
}

/**
 * Implements hook_entity_bundle_field_info_alter().
 */
function jcc_roc_entity_bundle_field_info_alter(&$fields, EntityTypeInterface $entity_type, $bundle): void {
  if ($entity_type->id() == 'node') {
    if ($bundle == 'rule_subsection') {
      if (!empty($fields['field_rule_subsection_id'])) {
        $fields['field_rule_subsection_id']->addConstraint('JccRocRuleUniqueIdConstraint');
      }
    }

    if ($bundle == 'rule_document') {
      if (!empty($fields['field_rule_document_id'])) {
        $fields['field_rule_document_id']->addConstraint('JccRocRuleUniqueIdConstraint');
      }
    }
  }
}

/**
 * Implements hook_page_attachments().
 */
function jcc_roc_page_attachments(&$page): void {
  if (Drupal::service('router.admin_context')->isAdminRoute()) {
    // $page['#attached']['library'][] =
    // 'jcc_roc/jcc_roc_admin_layout_paragraphs_edit_override';
  }
}
