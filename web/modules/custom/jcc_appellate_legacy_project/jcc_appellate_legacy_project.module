<?php

/**
 * @file
 * Primary module hooks for case lookup integrations.
 */

use Drupal\file\Entity\File;
use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_preprocess_HOOK() for appellate legacy project.
 */
function jcc_appellate_legacy_project_preprocess_views_view__justices_appellate_legacy_project__all_justices(&$variables) {
  if (empty($variables['rows'][0]['#rows'])) {
    return;
  }

  // Build the array of accordion items.
  global $base_url;
  $interviews = [];
  foreach ($variables['rows'][0]['#rows'] as $row) {
    $media = $row['#row']->_entity;
    $name = $media->get('name')->value;
    $lastname_exp = '/[A-zÀ-ú]+(?=,|$)/';
    preg_match($lastname_exp, $name, $lastname);
    $district = $media->get('jcc_section')->target_id ? Term::load($media->get('jcc_section')->target_id)->get('name')->value : '';
    $profile = \Drupal::service('path_alias.manager')->getAliasByPath($media->get('field_media_caption')->value);
    if ($profile) {
      $profile = $base_url . $profile;
    }
    $transcript = '';
    $file = $media->get('field_media_file')->target_id ? File::load($media->get('field_media_file')->target_id) : '';
    if ($file) {
      $transcript = \Drupal::service('file_url_generator')->generateAbsoluteString($file->uri->value);
    }
    if ($media->get('field_provider')->value) {
      $video = \Drupal::entityTypeManager()->getViewBuilder('media')->view($media);
    }
    else {
      $video = 'Video is not supported';
    }
    $interview = [
      'district' => $district,
      'name' => $name,
      'lastname' => implode($lastname),
      'video' => $video,
      'profile' => $profile,
      'transcript' => $transcript,
    ];
    array_push($interviews, $interview);
  }

  // Sort justices by lastname.
  usort($interviews, fn($a, $b) => $a['lastname'] <=> $b['lastname']);

  // Group and sort justices by district.
  $justices = [];
  foreach ($interviews as $interview) {
    if ($interview['district']) {
      $district = $interview['district'];
      $justices[$district][] = $interview;
    }
    else {
      $justices['Unassigned'][] = $interview;
    }
  }
  ksort($justices);

  $variables['justices'] = $justices;
}
