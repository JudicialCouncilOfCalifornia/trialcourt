<?php

/**
 * @file
 * Install taxonoomy terms for case served and service category.
 */

use Drupal\taxonomy\Entity\Term;
use Drupal\taxonomy\Entity\Vocabulary;

/**
 * Implements hook_update_N().
 */
function jcc_custom_update_8002() {
  // Vocabulary and terms data.
  $vocabularies = [
    'cases_served' => [
      'name' => 'All Cases Served',
      'terms' => [
        'Appeals',
        'Civil',
        'Conservatorships',
        'Criminal',
        'Domestic Violence',
        'Unlawful Detainer',
        'Family Law',
        'Guardianships',
        'Juvenile Dependency',
        'Juvenile Delinquency',
        'Mental Health',
        'CARE Court',
        'Name Change & Gender Affirmation',
        'Probate',
        'Restraining Orders',
        'Small Claims',
        'Traffic',
      ],
    ],
    'service_categories' => [
      'name' => 'Service Categories',
      'terms' => [
        'Clerk Window (All cases)',
        'Clerk Window (criminal)',
        'Clerk Window (civil)',
        'Clerk Window (Traffic)',
        'Self-Help',
      ],
    ],
  ];

  foreach ($vocabularies as $vid => $vocabulary_data) {
    // Check if the vocabulary exists.
    $vocabulary = Vocabulary::load($vid);
    if ($vocabulary) {
      // Add or update terms for the vocabulary.
      foreach ($vocabulary_data['terms'] as $term_name) {
        // Check if the term already exists in the vocabulary.
        $existing_terms = Term::loadMultiple();
        $term_exists = FALSE;
        foreach ($existing_terms as $term) {
          if ($term->get('vid')->value == $vid && $term->getName() == $term_name) {
            $term_exists = TRUE;
            break;
          }
        }

        if (!$term_exists) {
          $term = Term::create([
            'vid' => $vid,
            'name' => $term_name,
          ]);
          $term->save();
          \Drupal::messenger()->addMessage(t('Created term @name in vocabulary @vid.',
            ['@name' => $term_name, '@vid' => $vid]));
        }
      }
    }
  }
}

/**
 * Implements hook_update_N().
 * Dynamically updates the counties configuration.
 */
function jcc_custom_update_9499() {
  // Get the editable configuration object.
  $config = \Drupal::configFactory()->getEditable('jcc_custom.settings');

  // Log the current configuration for debugging.
  \Drupal::logger('my_module')->notice('Current counties: ' . json_encode($config->get('counties')));

  // List of counties to set to TRUE.
  $county_names = ['ukiah', 'napa', 'alpine', 'santaclara', 'alameda', 'sutter','test'];

  // Prepare an array where each county is set to TRUE.
  $counties = [];
  foreach ($county_names as $county) {
    $counties[$county] = TRUE;
    \Drupal::logger('my_module')->notice('Processing county: ' . $county . ' set to TRUE.');
  }

  // Save the updated counties array.
  $config->set('counties', $counties)->save();
  $installed_counties = $config->get('counties');
  print_r($installed_counties);
  \Drupal::logger('my_module')->notice('Processed counties ' . json_encode($config->get('counties'),true));

}


