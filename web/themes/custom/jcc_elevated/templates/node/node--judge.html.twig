{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{{ attach_library("jcc_storybook/Icon") }}
{{ attach_library("jcc_storybook/Section") }}
{{ attach_library("jcc_storybook/Profile") }}
{{ attach_library("jcc_storybook/ProfileCard") }}
{{ attach_library("jcc_storybook/ProfileBio") }}
{{ attach_library("jcc_storybook/Share") }}
{{ attach_library("jcc_storybook/List") }}
{{ attach_library("jcc_storybook/Pill") }}
{{ attach_library("jcc_storybook/Pills") }}

<article{{ attributes }}>
  {% set portrait %}
    {% if node.field_media.entity.field_media_image.entity.uri %}
      {% set image %}
        {% set media_uri = node.field_media.entity.field_media_image.entity.uri.value %}
        {% set image_alt = node.field_media.entity.field_media_image.alt %}
        {% set judge_name = node.field_media.entity.field_media_caption.value %}
        <img src="{{ file_url(media_uri|image_style('profile_cards_portrait'))}}" alt="{{image_alt ? image_alt : 'Portrait of ' ~ judge_name}}">
      {% endset %}
    {% endif %}
    {% include "@molecules/ProfileCard/ProfileCard.twig" with {
      image: image ? image|raw : false,
      placeholder: {
        icon: 'justice-avatar',
        icon_path: ' ',
        id: judge_name,
        title: judge_name is not empty ?'Placeholder for image of ' ~ judge_name : 'Placeholder for judge image'
      },
      name: false,
      title: false,
      content: false,
      url: false,
    } %}
  {% endset %}

  {% if documents %}
    {% set attachments %}
      {% include "@molecules/List/List.twig" with {
        variant: 'none',
        heading: 'Related Materials',
        items: documents,
      } %}
    {% endset %}
  {% endif %}

  {% if tags %}
    {% set tags %}
      {% set pills %}
        {% for tag in tags %}
          {% include "@atoms/Pill/Pill.twig" with {
            variant: 'default',
            label: tag.label,
            url: tag.url,
          } %}
        {% endfor %}
      {% endset %}
      {% include "@molecules/Pills/Pills.twig" with {
        variant: 'default',
        items: [pills],
      } %}
    {% endset %}
  {% endif %}

  {# Service time. #}
  {% set start_date = node.field_date.value is not empty ? node.field_date.value|date('Y') : '' %}
  {% set retire_date = node.field_retirement_date is not empty ? node.field_retirement_date.value|date('Y') : '' %}
  {% set service_time = 'Since ' ~ start_date %}
  {% if retire_date %}
    {% set service_time = 'From ' ~ start_date ~ ' to ' ~ retire_date %}
  {% endif %}

  {% set biography %}
    {% block bio_component %}
        {% include "@molecules/ProfileBio/ProfileBio.twig" with {
          name: label.0,
          title: node.field_job_title.value ? node.field_job_title.entity.label,
          division: node.field_division.value ? node.field_division.entity.label,
          date: service_time,
          content: content.body.0|render,
          share: {
            print_url: 'javascript: window.print();',
            print_aria_label: 'Print profile',
            download_url: profile_download.url,
            download_filename: profile_download.filename,
            download_aria_label: 'Download profile',
            icon_path: '/themes/contrib/jcc_storybook/src/assets/icons.svg',
          },
          sub_component_data: [
            attachments,
            tags
          ]
        } %}
    {% endblock %}
  {% endset %}

  <div class="profile">
    {% include "@organisms/Section/Section.twig" with {
      variant: 'default',
      sub_component_layout: 'with-sidebar',
      sidebar_direction: 'row',
      sub_component_data: {
        portrait,
        biography,
      },
      attributes: create_attribute()
    } %}
  </div>
</article>
