{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{% set parent_type = paragraph.getParentEntity().getType() %}

{% if 'lndo.site' in url('<current>')|render|render %}
  {% set domain = "http://newsroom.lndo.site" %}
{% elseif '.courts.ca.gov' in url('<current>')|render|render %}
  {% set domain = "https://newsrooms.courts.ca.gov" %}
{% else %}
  {% if 'stage-' in url('<current>')|render|render %}
    {% set domain = "https://stage-jcc-newsroom.pantheonsite.io" %}
  {% else %}
    {% set domain = "https://develop-jcc-newsroom.pantheonsite.io" %}
  {% endif %}
{% endif %}

{% set newsfeed %}
<div class="jcc-newsroom-widget"
  href="{{ domain }}/feed/news/{{ content.field_topic_ids.0 }}"
  data-subject="{{ content.field_topic_ids.0}}"
  data-hide-thumbnail="{{ content.field_hide_thumbnail.0|default('no') }}"
  data-hide-date="{{ content.field_hide_publish_date.0|default('no') }}"
  data-hide-description="{{ content.field_hide_description.0|default('no') }}"
  data-block-width="{{ content.field_hide_date.0 }}"
  data-origin="{{ domain }}"
  data-count="{{ content.field_max_articles.0 }}">
</div>
{% endset %}

{% include "@molecules/body/body.twig" with {
  body: {
    alt_background: parent_type == 'landing_page',
    main: {
      title: content.field_heading.0|render,
      lead: content.field_lead|render,
      text: newsfeed
    },
    classes: []
  }
} %}

<script async type="application/javascript" src="{{ domain }}/themes/custom/jcc_newsroom/feed-widget.js" charset="utf-8"></script>
