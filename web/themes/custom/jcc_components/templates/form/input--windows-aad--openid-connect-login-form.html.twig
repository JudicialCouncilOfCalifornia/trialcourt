{#
/**
 * @file
 * Theme override for an 'input' #type form element.
 *
 * Available variables:
 * - attributes: A list of HTML attributes for the input element.
 * - children: Optional additional rendered elements.
 *
 * @see template_preprocess_input()
 */
#}
{% set classes = [] %}

{# @todo Apply a class to the element if errors are present. Not sure if this code works. #}
{% if element.errors %}
  {% set classes = classes|merge(['usa-input-error']) %}
{% endif %}

{# Add input specific classes from USWDS. #}
{% if element['#type'] == 'range' %}
  {% set classes = classes|merge(['usa-range']) %}

{% elseif element['#type'] == 'checkbox' %}
  {% set classes = classes|merge(['usa-checkbox__input']) %}

{% elseif element['#type'] == 'radio' %}
  {% set classes = classes|merge(['usa-radio__input']) %}

{% elseif element['#type'] in ['submit', 'button'] %}
  {% set classes = classes|merge(['jcc-button--primary usa-button']) %}

{# Fallback to .usa-input for everything else, except type="file". #}
{% elseif element['#type'] not in ['file'] %}
  {% set classes = classes|merge(['usa-input']) %}
{% endif %}

<div class="jcc-login">
  {% if user_login_display == 'below' %}
    <p class="jcc-login__drupal-notation" style="margin-top:0;">Or</p>
  {% endif %}
  <div class="jcc-form">
    <input{{ attributes.addClass(classes) }} />{{ children }}
  </div>
  {% if user_login_display == 'above' %}
    <p class="jcc-login__drupal-notation">Or login with your Drupal account</p>
  {% endif %}
</div>
