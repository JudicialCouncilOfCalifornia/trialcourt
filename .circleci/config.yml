# https://circleci.com/docs/2.0/workflows/#using-workspaces-to-share-data-among-jobs
defaults: &defaults
  docker:
    - image: quay.io/pantheon-public/build-tools-ci:8.x-php8.1
  resource_class: xlarge
  working_directory: ~/project
  environment:
    #=========================================================================
    # In addition to the environment variables defined in this file, also
    # add the following variables in the Circle CI UI.
    #
    # See: https://circleci.com/docs/2.0/env-vars/
    #
    # GITHUB_TOKEN:   The GitHub personal access token
    # GIT_EMAIL:      The email address to use when making commits
    #=========================================================================
    TZ: "/usr/share/zoneinfo/America/Los_Angeles"

    # The variables below usually do not need to be modified.

    #======================================================================================================================================
    # Circle CI 2.0 does not yet expand environment variables so they have to be manually EXPORTed
    # Once environment variables can be expanded the variables below can be uncommented and the EXPORTs in set-up-globals.sh can be removed
    # See: https://discuss.circleci.com/t/unclear-how-to-work-with-user-variables-circleci-provided-env-variables/12810/11
    # See: https://discuss.circleci.com/t/environment-variable-expansion-in-working-directory/11322
    # See: https://discuss.circleci.com/t/circle-2-0-global-environment-variables/8681
    #======================================================================================================================================

    ADMIN_USERNAME: admin
    # BUILD_TOOLS_VERSION: ^2.0.0-alpha4
    TERM: dumb

cypress: &cypress
  docker:
    - image: cypress/base:18.16.0
  working_directory: ~/project
  environment:
    CYPRESS_CACHE_FOLDER: ~/.cache/Cypress

version: 2.1

jobs:
    build_test:
        <<: *defaults
        description: Build and Linting/Static Test
        steps:
            - checkout

            - run:
                name: Search for any unresolved merge conflict markers
                command: |
                    conflicted="$( grep -rE --exclude-dir={vendor,node_modules} --include=\*.{module,inc,php,js,css,html,htm,profile,install,yml,md} "^[\<|\>|\=]{7}" || true)"
                    if [[ -n "$conflicted" ]] ; then
                      echo $conflicted
                      exit 1
                    fi

            - restore_cache:
                keys:
                    - composer-cache

            - run:
                # Set TERMINUS_ENV and related environment variables.
                # https://github.com/pantheon-systems/docker-build-tools-ci/blob/1.x/scripts/set-environment
                name: environment
                command: /build-tools-ci/scripts/set-environment

            - run:
                name: run composer install to get the vendor directory
                command: composer install

            - save_cache:
                key: composer-cache
                paths:
                    - $HOME/.composer/cache

            - run:
                name: lint php code for syntax errors
                command: composer -n lint

            - run:
                name: check coding standards
                command: composer -n code-sniff

            - run:
                name: run unit tests
                command: composer -n unit-test

    deploy:
        <<: *defaults
        parameters:
            site:
                type: string
        description: Deploy << parameters.site >>
        steps:
            - add_ssh_keys:
                fingerprints:
                  - "69:0e:5d:fb:16:69:1a:79:8c:ef:b9:28:a6:8e:39:ca"

            - checkout

            - restore_cache:
                keys:
                  - composer-cache

            - run:
                name: run composer install to get the vendor directory
                command: composer install -o --no-dev

            - run:
                name: Deploying << parameters.site >>
                command: .circleci/scripts/deploy.sh << parameters.site >>

            - persist_to_workspace:
                root: ~/
                paths:
                    - project

    reset:
        <<: *defaults
        parameters:
            site:
                type: string
        description: Reset configuration of << parameters.site >>
        steps:
            - add_ssh_keys:
                fingerprints:
                  - "69:0e:5d:fb:16:69:1a:79:8c:ef:b9:28:a6:8e:39:ca"

            - attach_workspace:
                at: ~/

            - run:
                name: Clearing cache of << parameters.site >>
                command: .circleci/scripts/deploy-cr.sh << parameters.site >>

            - run:
                name: Updating DB of << parameters.site >>
                command: .circleci/scripts/deploy-updb.sh << parameters.site >>

            - run:
                name: Importing Config of << parameters.site >>
                command: .circleci/scripts/deploy-cim.sh << parameters.site >>

            - run:
                name: Reverting Immutable Features of << parameters.site >>
                command: .circleci/scripts/deploy-fra.sh << parameters.site >>

            - run:
                name: Clearing cache of << parameters.site >>
                command: .circleci/scripts/deploy-cr.sh << parameters.site >>

    deploy_legacy:
        <<: *defaults
        parameters:
            site:
                type: string
        description: Deploy << parameters.site >>
        steps:
            - add_ssh_keys:
                fingerprints:
                  - "69:0e:5d:fb:16:69:1a:79:8c:ef:b9:28:a6:8e:39:ca"

            - checkout

            - restore_cache:
                keys:
                  - composer-cache

            - run:
                name: run composer install to get the vendor directory
                command: composer install -o --no-dev

            - run:
                name: Build Themes
                command: scripts/theme.sh -i << parameters.site >> && scripts/theme.sh -b << parameters.site >>

            - run:
                name: Deploying << parameters.site >>
                command: .circleci/scripts/deploy.sh << parameters.site >>

            - persist_to_workspace:
                root: ~/
                paths:
                    - project

    reset_legacy:
        <<: *defaults
        parameters:
            site:
                type: string
        description: Reset configuration of << parameters.site >>
        steps:
            - add_ssh_keys:
                fingerprints:
                  - "69:0e:5d:fb:16:69:1a:79:8c:ef:b9:28:a6:8e:39:ca"

            - attach_workspace:
                at: ~/

            - run:
                name: Clearing cache of << parameters.site >>
                command: .circleci/scripts/deploy-cr.sh << parameters.site >>

            - run:
                name: Updating DB of << parameters.site >>
                command: .circleci/scripts/deploy-updb.sh << parameters.site >>

            - run:
                name: Importing Config of << parameters.site >>
                command: .circleci/scripts/deploy-cim.sh << parameters.site >>

            - run:
                name: Clearing cache of << parameters.site >>
                command: .circleci/scripts/deploy-cr.sh << parameters.site >>

    cypress:
        <<: *cypress
        parameters:
            site:
                type: string
        description: Cypress End to End and Visual Regression Testing
        steps:

            - attach_workspace:
                at: ~/

            - checkout

            - restore_cache:
                keys:
                    - cache-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}

            - run:
                name: Install
                working_directory: ''
                command: "if [[ ! -z \"\" ]]; then\n  echo \"Installing using custom command\"\n  echo \"\"\n  \nelif [ \"false\" = \"true\" ]; then\n  echo \"Installing using Yarn\"\n  yarn install --frozen-lockfile\nelif [ ! -e ./package-lock.json ]; then\n  echo \"The Cypress orb uses 'npm ci' to install 'node_modules', which requires a 'package-lock.json'.\"\n  echo \"A 'package-lock.json' file was not found. Please run 'npm install' in your project,\"\n  echo \"and commit 'package-lock.json' to your repo.\"\n  exit 1\nelse\n  echo \"Installing dependencies using NPM ci\"\n  npm ci\nfi\n"

            - run:
                name: Verify Cypress
                command: npx cypress verify
                working_directory: ''

            - save_cache:
                key: cache-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
                paths:
                    - ~/.npm
                    - ~/.cache

            - persist_to_workspace:
                root: ~/
                paths:
                    - project
                    - .cache/Cypress

#            - run:
#                name: VRT set base images
#                command: .circleci/scripts/cypress-ci.sh -b << parameters.site >>
#                no_output_timeout: 10m
#                working_directory: ''

            - run:
                name: Run CI specs.
                command: .circleci/scripts/cypress-ci.sh << parameters.site >>
                no_output_timeout: 10m
                working_directory: ''

            - store_artifacts:
                path: /root/project/test/cypress/videos
                destination: /videos

            - store_artifacts:
                path: /root/project/test/cypress/reports
                destination: /reports

            - store_artifacts:
                path: /root/project/test/cypress/snapshots
                destination: /snapshots

            - store_artifacts:
                path: /root/project/test/cypress/screenshots
                destination: /screenshots

workflows:
  version: 2.1
  build_and_test:
    jobs:
      # Install dev dependencies and do simple tests (sniff, unit tests, etc.)
      - build_test
      - deploy:
          name: deploy-<< matrix.site >>
          matrix:
            parameters:
              site: ["colusa", "inyo", "slo2", "sc", "store-front", "tehama", "lake", "kings", "humboldt", "sierra", "tularesuperiorcourt", "mendocino", "alpine", "siskiyou", "mono", "napa", "supremecourt", "madera", "elcondado", "modoc", "eldorado", "trinity", "fresno", "sacramento", "glenn", "yuba", "sutter", "mariposa", "alameda", "butte", "imperial", "idm", "placer", "stanislaus", "sanbenito", "nccourt", "merced", "sf", "kern", "tuolumne", "santabarbara", "monterey", "sonoma", "partners", "oc", "amdr", "lassen", "sanmateo", "delnorte", "calaveras", "santaclara", "appellate", "plumas", "diversity-toolkit", "shasta", "marin", "courts", "sanbernardino"]
          requires:
            - build_test
          filters:
            branches:
              only:
                - develop
                - stage
                - master
                - /^epic-.*/
      - reset:
          name: reset-<< matrix.site >>
          matrix:
            parameters:
              site: ["colusa", "inyo", "slo2", "sc", "store-front", "tehama", "lake", "kings", "humboldt", "sierra", "tularesuperiorcourt", "mendocino", "alpine", "siskiyou", "mono", "napa", "supremecourt", "madera", "elcondado", "modoc", "eldorado", "trinity", "fresno", "sacramento", "glenn", "yuba", "sutter", "mariposa", "alameda", "butte", "imperial", "idm", "placer", "stanislaus", "sanbenito", "nccourt", "merced", "sf", "kern", "tuolumne", "santabarbara", "monterey", "sonoma", "partners", "oc", "amdr", "lassen", "sanmateo", "delnorte", "calaveras", "santaclara", "appellate", "plumas", "diversity-toolkit", "shasta", "marin", "courts", "sanbernardino"]
          requires:
            - deploy-<< matrix.site >>
          filters:
            branches:
              only:
                - develop
                - stage
                - master
                - /^epic-.*/
      - cypress:
          name: cypress-<< matrix.site >>
          matrix:
            parameters:
              site: ["colusa", "inyo", "slo2", "sc", "store-front", "tehama", "lake", "kings", "humboldt", "sierra", "tularesuperiorcourt", "mendocino", "alpine", "siskiyou", "mono", "napa", "supremecourt", "madera", "elcondado", "modoc", "eldorado", "trinity", "fresno", "sacramento", "glenn", "yuba", "sutter", "mariposa", "alameda", "butte", "imperial", "idm", "placer", "stanislaus", "sanbenito", "nccourt", "merced", "sf", "kern", "tuolumne", "santabarbara", "monterey", "sonoma", "partners", "oc", "amdr", "lassen", "sanmateo", "delnorte", "calaveras", "santaclara", "appellate", "plumas", "diversity-toolkit", "shasta", "marin", "courts", "sanbernardino"]
          requires:
            - reset-<< matrix.site >>
          filters:
            branches:
              only:
                - develop
                - stage
      - deploy_legacy:
          name: deploy_legacy-<< matrix.site >>
          matrix:
            parameters:
              site: ["newsroom", "deprep"]
          requires:
            - build_test
          filters:
            branches:
              only:
                - develop
                - stage
                - master
                - /^epic-.*/
      - reset_legacy:
          name: reset_legacy-<< matrix.site >>
          matrix:
            parameters:
              site: ["newsroom", "deprep"]
          requires:
            - deploy_legacy-<< matrix.site >>
          filters:
            branches:
              only:
                - develop
                - stage
                - master
                - /^epic-.*/
      - cypress:
          matrix:
            parameters:
              site: ["newsroom"]
          requires:
            - reset_legacy-<< matrix.site >>
          filters:
            branches:
              only:
                - develop
                - stage

experimental:
  notify:
    branches:
      only:
        - master
